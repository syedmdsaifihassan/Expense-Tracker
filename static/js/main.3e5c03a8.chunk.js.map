{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","React","createElement","children","ExpenseFilter","value","selected","onChange","event","onFilterYearSelect","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","key","id","ChartBar","barFillheight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","useState","filteredExpenses","filter","toString","selectedYear","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","showForm","setShowForm","showBtn","setShowBtn","onClick","displayForm","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","NewExpense","enteredExpenseData","random","console","log","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3e5c03a8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n    const classes = 'card '+ props.className;\n    \n    return(\n        <div className={classes}>{props.children}</div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n    const yearChangeHandler = (event) => {\n        // console.log('ExpenseFilter.js');\n        // console.log(event.target.value);\n        props.onFilterYearSelect(event.target.value);\n    };\n\n    return (\n        React.createElement('div', {className: 'expenses-filter'},\n            React.createElement('div', {className: 'expenses-filter__control'}, \n                React.createElement('label', {}, 'Filter by Year'),\n                React.createElement('select', {value: props.selected , onChange: yearChangeHandler},\n                    // React.createElement('option', {value: ''}),\n                    React.createElement('option', {value: '2022'}, '2022'),\n                    React.createElement('option', {value: '2021'}, '2021'),\n                    React.createElement('option', {value: '2020'}, '2020'),\n                    React.createElement('option', {value: '2019'}, '2019')\n                )\n            )\n        )\n    );\n};\n\nexport default ExpenseFilter;","import React from \"react\";\nimport \"./ExpenseDate.css\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseDate = (props) => {\n    const month = props.date.toLocaleString('default', { month: 'long' });\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('default', { day: '2-digit' });\n\n    return(\n        <Card className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </Card>\n    );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n\n    // const [title, setTitle] = useState(props.title);\n    // const clickHandler = ()  => {\n    //     setTitle('Updated!!!');\n    //     console.log(title);\n    // };\n\n    // React approach\n    return (\n        React.createElement(Card, {className: 'expense-item'},\n            React.createElement(ExpenseDate, {date: props.date}),\n            React.createElement('div', {className: 'expense-item__description'},\n                React.createElement('h2', {}, props.title),\n                React.createElement('div', {className: 'expense-item__price'}, '$ '+props.amount)\n            )\n            // React.createElement('button', {onClick: clickHandler}, 'Change Title')\n        )\n    );\n    \n    // JSX aproach\n    // return(\n    //     <Card className=\"expense-item\">\n    //         <ExpenseDate date={props.date}></ExpenseDate>\n    //         <div className=\"expense-item__description\">\n    //             <h2>{props.title}</h2>\n    //             <div className=\"expense-item__price\">${props.amount}</div>\n    //         </div>\n    //     </Card>\n    // );\n}\n\nexport default ExpenseItem;  ","import React from \"react\";\nimport \"./ExpenseList.css\"\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpenseList = (props) => {\n\n    if(props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">Found no Expense</h2>\n    }\n\n    return (\n        <ul className=\"expenses-list\">\n            {props.items.map((expense) => (\n            <ExpenseItem\n                key = {expense.id}\n                title = {expense.title}\n                amount = {expense.amount} \n                date = {expense.date}\n            ></ExpenseItem>\n        ))}\n        </ul>\n    )\n};\n\nexport default ExpenseList;","import React from \"react\";\nimport \"./ChartBar.css\"\n\nconst ChartBar = props => {\n    let barFillheight = \"0%\";\n    if(props.maxValue > 0){\n        barFillheight = Math.round((props.value/props.maxValue) * 100) + '%';\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div \n                    className=\"chart-bar__fill\" \n                    style={{height: barFillheight}}>\n\n                </div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;","import React from \"react\";\nimport \"./Chart.css\"\nimport ChartBar from \"./ChartBar\"\n\nconst Chart = props => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMax = Math.max(...dataPointValues);\n\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (\n                <ChartBar\n                    key = {dataPoint.label}\n                    value = {dataPoint.value}\n                    maxValue = {totalMax}\n                    label = {dataPoint.label}\n                ></ChartBar>\n            ))}\n        </div>\n    );\n};\n\nexport default Chart;","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n    const chartDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sept', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ];\n\n    for(const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return (\n        <Chart dataPoints={chartDataPoints} />\n    );\n};\n\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    const filterYearSelectHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n        // console.log(selectedYear);\n    };\n\n    const expenses = props.items;\n\n    const filteredExpenses = expenses.filter((expense) => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    \n\n    return(\n        <Card className=\"expenses\">\n            <ExpenseFilter \n                selected={filteredYear} \n                onFilterYearSelect={filterYearSelectHandler}\n            />\n            <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\n            <ExpenseList items={filteredExpenses}></ExpenseList>       \n        </Card>\n    );\n}\n\nexport default Expenses;","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n    // const [enteredTitle, setEnteredTitle] = useState('');\n    // const [enteredAmount, setEnteredAmount] = useState('');\n    // const [enteredDate, setEnteredDate] = useState('');\n\n    const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n    });\n\n    const [showForm, setShowForm] = useState(false);\n    const [showBtn, setShowBtn] = useState(true);\n\n    const titleChangeHandler = (event) => {\n        // setEnteredTitle(event.target.value);\n\n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitle: event.target.value,\n        // });\n\n        setUserInput((prevState) => {\n            return { ...prevState, enteredTitle: event.target.value };\n        });\n    };\n    const amountHandler = (event) => {\n        // setEnteredAmount(event.target.value);\n\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmount: event.target.value,\n        // });\n\n        setUserInput((prevState) => {\n            return { ...prevState, enteredAmount: event.target.value };\n        });\n    };\n    const dateHandler = (event) => {\n        // setEnteredDate(event.target.value);\n\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate: event.target.value,\n        // });\n\n        setUserInput((prevState) => {\n            return { ...prevState, enteredDate: event.target.value };\n        });\n    }; \n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: userInput.enteredTitle,\n            amount: +userInput.enteredAmount,\n            date: new Date(userInput.enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        setUserInput({\n            enteredTitle: '',\n            enteredAmount: '',\n            enteredDate: ''\n        })\n\n        setShowForm(false);\n        setShowBtn(true);\n    };\n\n    \n    const displayForm = () => {\n        setShowForm(true);\n        setShowBtn(false);\n    };\n\n    return(\n\n        <div>\n\n            {showBtn && (\n                <div className=\"new-expense__form\">\n                    <button onClick={displayForm}>Add Expense</button>\n            </div>\n            )}\n            {showForm && (\n                <form onSubmit={submitHandler}>\n                    <div className=\"main_form\">\n                        <div className=\"new-expense__controls\">\n                            <div className=\"new-expense__control\">\n                                <label>Title</label>\n                                <input type='text' value={userInput.enteredTitle} onChange={titleChangeHandler}></input>\n                            </div>\n                            <div className=\"new-expense__control\">\n                                <label>Amount</label>\n                                <input type='number' value={userInput.enteredAmount} onChange={amountHandler} min='0.01' step='0.01'></input>\n                            </div>\n                            <div className=\"new-expense__control\">\n                                <label>Date</label>\n                                <input type='date' value={userInput.enteredDate} onChange={dateHandler} min='2019-01-01' max='2022-12-31'></input>\n                            </div>\n                        </div>\n                        <div className=\"new-expense__actions\">\n                            <button type='submit'>Add Expense</button>\n                        </div>\n                    </div>\n                </form>\n            )}\n        </div>\n        \n\n        // React approach\n        // React.createElement('form', {onSubmit: submitHandler}, \n        //     React.createElement('div', {className: 'new-expense__controls'}, \n        //         React.createElement('div', {className: 'new-expense__control'},\n        //             React.createElement('label', {}, 'Title'),\n        //             React.createElement('input', {type: 'text', value: userInput.enteredTitle ,onChange: titleChangeHandler })\n        //         ),\n        //         React.createElement('div', {className: 'new-expense__control'},\n        //             React.createElement('label', {}, 'Amount'),\n        //             React.createElement('input', {type: 'number', min:'0.01', step: '0.01', value: userInput.enteredAmount ,onChange: amountHandler })\n        //         ),\n        //         React.createElement('div', {className: 'new-expense__control'},\n        //             React.createElement('label', {}, 'Date'),\n        //             React.createElement('input', {type: 'date', min: '2019-01-01', max: '2022-12-31', value: userInput.enteredDate ,onChange: dateHandler })\n        //         )\n        //     ),\n        //     React.createElement('div', {className: 'new-expense__actions'}, \n        //         React.createElement('button', {type: 'submit'}, 'Add Expense')\n        //     )\n        // )\n    );\n};\n\nexport default ExpenseForm;","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n        console.log(expenseData);\n        props.onAddExpense(expenseData);\n    };\n\n    return(\n        React.createElement('div', {className: 'new-expense'}, \n            React.createElement(ExpenseForm, {onSaveExpenseData: saveExpenseDataHandler})\n        )\n    );\n};\n\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSE = [\n  // { \n  //   id: \"e1\",\n  //   title: \"Books\", \n  //   amount: 100.28, \n  //   date: new Date('2019-08-02') \n  // },\n  // { \n  //   id: \"e2\",\n  //   title: \"Bag\", \n  //   amount: 300, \n  //   date: new Date('2020-07-03') \n  // },\n  // { \n  //   id: \"e3\",\n  //   title: \"Monitor\", \n  //   amount: 200.19, \n  //   date: new Date('2021-08-05')   \n  // }, \n  // { \n  //   id: \"e4\",\n  //   title: \"Laptop\", \n  //   amount: 400, \n  //   date: new Date('2022-04-04') \n  // },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n  };\n\n  //React approach\n  return (\n    React.createElement('div',{},\n      React.createElement(NewExpense, {onAddExpense: addExpenseHandler}),\n      React.createElement(Expenses, {items: expenses})\n    )\n  );\n\n  //JSX approach\n  // return (\n  //   <div className=\"App\">\n  //     <h2>Expense Tracker</h2>\n  //     <Expenses items={expenses}></Expenses>\n  //   </div>\n  // );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport \"./index.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}